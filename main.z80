INCLUDE "hardware.inc"

SECTION "rst38",ROM0[$38]
REPT 8
	rst $38
ENDR
SECTION "Interrupt handlers",ROM0[$40]
REPT $100 - $40
	reti
ENDR

SECTION "Header", ROM0[$100]
EntryPoint:
	ei
	jp Start
REPT $150 - $104
	db 0
ENDR


SECTION "Start", ROM0
Start:
	call Init_OAM
	call Load_DMA_Loop
	call InitRoom
	call Init
	call OAM_DMA
	call Wait_VBlank


	jp TerminateLoop

Wait_VBlank:
	;corrupts c and a
.EnableVBlankInterrupt
	ld c, LOW(rIE)
	ld a, [c]
	or a, IEF_VBLANK
	ld [c], a
	ld c, LOW(rLY)
.WaitLoop
	halt
	ld a, [c]
    cp SCRN_Y
    jr c, .WaitLoop
	ret

TerminateLoop	;halts the machine
	db $40
	halt
	jr TerminateLoop

SECTION "room",WRAM0

room:	;a representation of the map in the memory
;each cell could be one of the following:
; w		- wall
;' '	- free space
; +		- corners
	ds SCRN_VX_B * SCRN_VY_B

SECTION "Shadow OAM",WRAM0,ALIGN[8]
shadow_oam:
	ds 160

SECTION "OAM loop, source",ROM0
DMA_Source:
	ld a, HIGH(shadow_oam)
	ldh  [rDMA], a
	ld  a, $28
.oam_loop_wait:
	dec a
	jr  nz, .oam_loop_wait
	ret
.end:

SECTION "OAM loop, destinaton",HRAM
OAM_DMA:
	ds DMA_Source.end - DMA_Source
.end:
